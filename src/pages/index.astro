---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../config";
import { getCollection } from "astro:content";
import Introduction from "../components/Introduction.astro";

const posts = Object.values(
    import.meta.glob("./blog/*.{md,mdx}", { eager: true }),
).sort(
    (a, b) =>
        new Date(b?.frontmatter?.pubDate).valueOf() -
        new Date(a?.frontmatter?.pubDate).valueOf(),
);

const tags = await getCollection("tags");
---

<!doctype html>
<html lang="en">
    <head>
        <BaseHead
            title={SITE_TITLE}
            description={SITE_DESCRIPTION}
            type="website"
        />
        <style scoped>
            ul {
                list-style-type: none;
                padding: unset;
            }

            ul li {
                display: flex;
                align-items: baseline;
                margin-bottom: 0.75em;
                padding-top: 0.75em;
                flex-wrap: wrap;
                border-top: 1px dotted lightgray;
            }

            ul.posts-list {
                padding-left: 0;
            }

            .tags-container {
                flex: 0 0 100%;
                padding-left: 10.5ch;
            }

            ul li time {
                flex: 0 0 13ch;
                font-style: italic;
                color: #000000;
                font-size: 0.85em;
            }

            ul li a {
                color: black;
                text-decoration: none;
            }
            ul li a:hover {
                text-decoration: underline;
            }

            ul li a:visited {
                color: black;
            }

            @media screen and (max-width: 767px) {
                ul li time {
                    flex: 0 0 100%;
                }

                .tags-container {
                    padding-left: 0;
                    margin-left: -0.25em;
                }
                ul li {
                    flex-wrap: wrap;
                    margin-bottom: 1em;
                }
            }
        </style>
    </head>
    <body>
        <Header have_langs={false} />
        <main>
            <Introduction />

            <div class="tags">
                {
                    tags
                        .filter((t) => t.data.entries > 3)
                        .map((t) => (
                            <a href={"/blog/tag/" + t.id}>
                                <span class={"tag " + t.id}>
                                    {t.id} ({t.data.entries - 1})
                                </span>
                            </a>
                        ))
                }
            </div>
            <section>
                <ul class="posts-list">
                    {
                        posts
                            .filter((post) => !post.frontmatter.draft)
                            .map((post) => (
                                <li>
                                    <time datetime={post.frontmatter.pubDate}>
                                        {post.frontmatter.pubDate}
                                    </time>

                                    <a
                                        href={post.url}
                                        set:html={post.frontmatter.title.replace(
                                            "--",
                                            "<br/>",
                                        )}
                                    />
                                    <div class="tags-container">
                                        <div class="tags">
                                            {(post.frontmatter.tags || []).map(
                                                (t) => (
                                                    <a href={"/blog/tag/" + t}>
                                                        <span
                                                            class={"tag " + t}
                                                        >
                                                            {t}
                                                        </span>
                                                    </a>
                                                ),
                                            )}
                                        </div>
                                    </div>
                                </li>
                            ))
                    }
                </ul>
            </section>
        </main>
        <Footer />
    </body>
</html>
